import{A as E,i as G,r as M,h as z,u as H,w as J,B as V,W as N,j as P,S as U,l as j,n as Q,o as T,p as A,q,s as C,t as F,V as I,y as L,Q as X,H as Y}from"./index.f735b5c1.js";import{s as B}from"./useBVHMap.89d4dfff.1033c271.js";import{x as W}from"./PhysicsUpdate.80a0de04.524d9a70.js";const f=new Set,Z=()=>new WeakSet;E(function(){if(H())return;const n=B();if(!n.length)return;const e=G(),S=M(),d=.02,c=z(),R=J(()=>{V.clear();for(const t of f){const s=t.bvhVelocity,o=t.outerObject3d,l=t.bvhHalfHeight,i=c?l:t.bvhRadius;c?s.add(t.bvhOnGround||t._gravity===!1?N:P(o).normalize().multiplyScalar(d*-e*U[0])):s.y+=t.bvhOnGround||t._gravity===!1?0:d*-e*U[0];const h=t.positionUpdate;h.x&&(s.x=0),h.y&&(s.y=0),h.z&&(s.z=0),h.reset(),o.position.addScaledVector(s,d),o.updateMatrixWorld();const{start:r,end:u}=A;u.copy(r.copy(o.position));const x=Math.max(l-i,0);u.y+=x,r.y-=x;const _=r.clone();j.setFromCenterAndSize(o.position,Q.set(i*2,l*2,i*2));const g=X,O=Y;let p=0,m,b=!1,y;for(const w of n)y=T.get(w),w.shapecast({intersectsBounds:v=>v.intersectsBox(j),intersectsTriangle:v=>{p=v.closestPointToSegment(A,g,O),p<i&&(b=!0,m=O.sub(g).normalize().multiplyScalar(i-p),r.add(m),u.add(m))}});b&&y&&q(V,t,Z).add(y);const a=r.sub(_);c?t.bvhOnGround=b:(t.bvhOnGround=a.y>Math.abs(d*s.y*.25),S&&t.bvhOnGround&&Math.abs(a.y/(a.x+a.z+Number.EPSILON))<S&&(t.bvhOnGround=!1));const k=Math.max(0,a.length()-1e-5);a.normalize().multiplyScalar(k),o.position.add(a),t.bvhOnGround?s.set(0,0,0):(a.normalize(),s.addScaledVector(a,-a.dot(s)))}});return()=>{R.cancel()}},[B,G,M,z,H]);function tt(n){if(n.done)return;C.attach(this.outerObject3d),this instanceof F&&(this.width=this.depth=Math.min(this.width,this.depth)),this.rotationUpdate=new W,this.positionUpdate=new W;const e=I(this).multiplyScalar(.5);this.bvhHalfHeight=Math.max(e.y,.5),this.bvhRadius=Math.max(e.x,.5),this.bvhVelocity=new L,f.add(this),n.then(()=>{f.delete(this),this.rotationUpdate=void 0,this.positionUpdate=void 0})}export{tt as default};
