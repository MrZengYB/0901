import{q as dt,aa as gt,ac as mt,aq as it,aK as B,y as wt,b6 as At,b7 as Tt,b8 as kt,b9 as at,k as vt,a2 as lt,ax as Mt,ay as ft,az as Pt,ba as ot}from"./index.f735b5c1.js";class ut extends gt{constructor(L){super(L),this.defaultDPI=90,this.defaultUnit="px"}load(L,N,k,z){const w=this,Q=new mt(w.manager);Q.setPath(w.path),Q.setRequestHeader(w.requestHeader),Q.setWithCredentials(w.withCredentials),Q.load(L,function(et){try{N(w.parse(et))}catch(Z){z?z(Z):console.error(Z),w.manager.itemError(L)}},k,z)}parse(L){const N=this;function k(i,o){if(i.nodeType!==1)return;const t=g(i);let s=!1,a=null;switch(i.nodeName){case"svg":o=R(i,o);break;case"style":w(i);break;case"g":o=R(i,o);break;case"path":o=R(i,o),i.hasAttribute("d")&&(a=z(i));break;case"rect":o=R(i,o),a=Z(i);break;case"polygon":o=R(i,o),a=X(i);break;case"polyline":o=R(i,o),a=K(i);break;case"circle":o=R(i,o),a=W(i);break;case"ellipse":o=R(i,o),a=q(i);break;case"line":o=R(i,o),a=rt(i);break;case"defs":s=!0;break;case"use":o=R(i,o);const r=(i.getAttributeNS("http://www.w3.org/1999/xlink","href")||"").substring(1),b=i.viewportElement.getElementById(r);b?k(b,o):console.warn("SVGLoader: 'use node' references non-existent node id: "+r);break}a&&(o.fill!==void 0&&o.fill!=="none"&&a.color.setStyle(o.fill),S(a,j),D.push(a),a.userData={node:i,style:o});const f=i.childNodes;for(let r=0;r<f.length;r++){const b=f[r];s&&b.nodeName!=="style"&&b.nodeName!=="defs"||k(b,o)}t&&(p.pop(),p.length>0?j.copy(p[p.length-1]):j.identity())}function z(i){const o=new ot,t=new B,s=new B,a=new B;let f=!0,r=!1;const b=i.getAttribute("d").match(/[a-df-z][^a-df-z]*/ig);for(let x=0,h=b.length;x<h;x++){const v=b[x],V=v.charAt(0),M=v.slice(1).trim();f===!0&&(r=!0,f=!1);let n;switch(V){case"M":n=u(M);for(let e=0,c=n.length;e<c;e+=2)t.x=n[e+0],t.y=n[e+1],s.x=t.x,s.y=t.y,e===0?o.moveTo(t.x,t.y):o.lineTo(t.x,t.y),e===0&&a.copy(t);break;case"H":n=u(M);for(let e=0,c=n.length;e<c;e++)t.x=n[e],s.x=t.x,s.y=t.y,o.lineTo(t.x,t.y),e===0&&r===!0&&a.copy(t);break;case"V":n=u(M);for(let e=0,c=n.length;e<c;e++)t.y=n[e],s.x=t.x,s.y=t.y,o.lineTo(t.x,t.y),e===0&&r===!0&&a.copy(t);break;case"L":n=u(M);for(let e=0,c=n.length;e<c;e+=2)t.x=n[e+0],t.y=n[e+1],s.x=t.x,s.y=t.y,o.lineTo(t.x,t.y),e===0&&r===!0&&a.copy(t);break;case"C":n=u(M);for(let e=0,c=n.length;e<c;e+=6)o.bezierCurveTo(n[e+0],n[e+1],n[e+2],n[e+3],n[e+4],n[e+5]),s.x=n[e+2],s.y=n[e+3],t.x=n[e+4],t.y=n[e+5],e===0&&r===!0&&a.copy(t);break;case"S":n=u(M);for(let e=0,c=n.length;e<c;e+=4)o.bezierCurveTo(d(t.x,s.x),d(t.y,s.y),n[e+0],n[e+1],n[e+2],n[e+3]),s.x=n[e+0],s.y=n[e+1],t.x=n[e+2],t.y=n[e+3],e===0&&r===!0&&a.copy(t);break;case"Q":n=u(M);for(let e=0,c=n.length;e<c;e+=4)o.quadraticCurveTo(n[e+0],n[e+1],n[e+2],n[e+3]),s.x=n[e+0],s.y=n[e+1],t.x=n[e+2],t.y=n[e+3],e===0&&r===!0&&a.copy(t);break;case"T":n=u(M);for(let e=0,c=n.length;e<c;e+=2){const P=d(t.x,s.x),E=d(t.y,s.y);o.quadraticCurveTo(P,E,n[e+0],n[e+1]),s.x=P,s.y=E,t.x=n[e+0],t.y=n[e+1],e===0&&r===!0&&a.copy(t)}break;case"A":n=u(M,[3,4],7);for(let e=0,c=n.length;e<c;e+=7){if(n[e+5]==t.x&&n[e+6]==t.y)continue;const P=t.clone();t.x=n[e+5],t.y=n[e+6],s.x=t.x,s.y=t.y,Q(o,n[e],n[e+1],n[e+2],n[e+3],n[e+4],P,t),e===0&&r===!0&&a.copy(t)}break;case"m":n=u(M);for(let e=0,c=n.length;e<c;e+=2)t.x+=n[e+0],t.y+=n[e+1],s.x=t.x,s.y=t.y,e===0?o.moveTo(t.x,t.y):o.lineTo(t.x,t.y),e===0&&a.copy(t);break;case"h":n=u(M);for(let e=0,c=n.length;e<c;e++)t.x+=n[e],s.x=t.x,s.y=t.y,o.lineTo(t.x,t.y),e===0&&r===!0&&a.copy(t);break;case"v":n=u(M);for(let e=0,c=n.length;e<c;e++)t.y+=n[e],s.x=t.x,s.y=t.y,o.lineTo(t.x,t.y),e===0&&r===!0&&a.copy(t);break;case"l":n=u(M);for(let e=0,c=n.length;e<c;e+=2)t.x+=n[e+0],t.y+=n[e+1],s.x=t.x,s.y=t.y,o.lineTo(t.x,t.y),e===0&&r===!0&&a.copy(t);break;case"c":n=u(M);for(let e=0,c=n.length;e<c;e+=6)o.bezierCurveTo(t.x+n[e+0],t.y+n[e+1],t.x+n[e+2],t.y+n[e+3],t.x+n[e+4],t.y+n[e+5]),s.x=t.x+n[e+2],s.y=t.y+n[e+3],t.x+=n[e+4],t.y+=n[e+5],e===0&&r===!0&&a.copy(t);break;case"s":n=u(M);for(let e=0,c=n.length;e<c;e+=4)o.bezierCurveTo(d(t.x,s.x),d(t.y,s.y),t.x+n[e+0],t.y+n[e+1],t.x+n[e+2],t.y+n[e+3]),s.x=t.x+n[e+0],s.y=t.y+n[e+1],t.x+=n[e+2],t.y+=n[e+3],e===0&&r===!0&&a.copy(t);break;case"q":n=u(M);for(let e=0,c=n.length;e<c;e+=4)o.quadraticCurveTo(t.x+n[e+0],t.y+n[e+1],t.x+n[e+2],t.y+n[e+3]),s.x=t.x+n[e+0],s.y=t.y+n[e+1],t.x+=n[e+2],t.y+=n[e+3],e===0&&r===!0&&a.copy(t);break;case"t":n=u(M);for(let e=0,c=n.length;e<c;e+=2){const P=d(t.x,s.x),E=d(t.y,s.y);o.quadraticCurveTo(P,E,t.x+n[e+0],t.y+n[e+1]),s.x=P,s.y=E,t.x=t.x+n[e+0],t.y=t.y+n[e+1],e===0&&r===!0&&a.copy(t)}break;case"a":n=u(M,[3,4],7);for(let e=0,c=n.length;e<c;e+=7){if(n[e+5]==0&&n[e+6]==0)continue;const P=t.clone();t.x+=n[e+5],t.y+=n[e+6],s.x=t.x,s.y=t.y,Q(o,n[e],n[e+1],n[e+2],n[e+3],n[e+4],P,t),e===0&&r===!0&&a.copy(t)}break;case"Z":case"z":o.currentPath.autoClose=!0,o.currentPath.curves.length>0&&(t.copy(a),o.currentPath.currentPoint.copy(t),f=!0);break;default:console.warn(v)}r=!1}return o}function w(i){if(!(!i.sheet||!i.sheet.cssRules||!i.sheet.cssRules.length))for(let o=0;o<i.sheet.cssRules.length;o++){const t=i.sheet.cssRules[o];if(t.type!==1)continue;const s=t.selectorText.split(/,/gm).filter(Boolean).map(a=>a.trim());for(let a=0;a<s.length;a++){const f=Object.fromEntries(Object.entries(t.style).filter(([,r])=>r!==""));Y[s[a]]=Object.assign(Y[s[a]]||{},f)}}}function Q(i,o,t,s,a,f,r,b){if(o==0||t==0){i.lineTo(b.x,b.y);return}s=s*Math.PI/180,o=Math.abs(o),t=Math.abs(t);const x=(r.x-b.x)/2,h=(r.y-b.y)/2,v=Math.cos(s)*x+Math.sin(s)*h,V=-Math.sin(s)*x+Math.cos(s)*h;let M=o*o,n=t*t;const e=v*v,c=V*V,P=e/M+c/n;if(P>1){const ht=Math.sqrt(P);o=ht*o,t=ht*t,M=o*o,n=t*t}const E=M*c+n*e,nt=(M*n-E)/E;let F=Math.sqrt(Math.max(0,nt));a===f&&(F=-F);const $=F*o*V/t,st=-F*t*v/o,pt=Math.cos(s)*$-Math.sin(s)*st+(r.x+b.x)/2,xt=Math.sin(s)*$+Math.cos(s)*st+(r.y+b.y)/2,yt=et(1,0,(v-$)/o,(V-st)/t),bt=et((v-$)/o,(V-st)/t,(-v-$)/o,(-V-st)/t)%(Math.PI*2);i.currentPath.absellipse(pt,xt,o,t,yt,yt+bt,f===0,s)}function et(i,o,t,s){const a=i*t+o*s,f=Math.sqrt(i*i+o*o)*Math.sqrt(t*t+s*s);let r=Math.acos(Math.max(-1,Math.min(1,a/f)));return i*s-o*t<0&&(r=-r),r}function Z(i){const o=y(i.getAttribute("x")||0),t=y(i.getAttribute("y")||0),s=y(i.getAttribute("rx")||i.getAttribute("ry")||0),a=y(i.getAttribute("ry")||i.getAttribute("rx")||0),f=y(i.getAttribute("width")),r=y(i.getAttribute("height")),b=1-.551915024494,x=new ot;return x.moveTo(o+s,t),x.lineTo(o+f-s,t),(s!==0||a!==0)&&x.bezierCurveTo(o+f-s*b,t,o+f,t+a*b,o+f,t+a),x.lineTo(o+f,t+r-a),(s!==0||a!==0)&&x.bezierCurveTo(o+f,t+r-a*b,o+f-s*b,t+r,o+f-s,t+r),x.lineTo(o+s,t+r),(s!==0||a!==0)&&x.bezierCurveTo(o+s*b,t+r,o,t+r-a*b,o,t+r-a),x.lineTo(o,t+a),(s!==0||a!==0)&&x.bezierCurveTo(o,t+a*b,o+s*b,t,o+s,t),x}function X(i){function o(f,r,b){const x=y(r),h=y(b);a===0?s.moveTo(x,h):s.lineTo(x,h),a++}const t=/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,s=new ot;let a=0;return i.getAttribute("points").replace(t,o),s.currentPath.autoClose=!0,s}function K(i){function o(f,r,b){const x=y(r),h=y(b);a===0?s.moveTo(x,h):s.lineTo(x,h),a++}const t=/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,s=new ot;let a=0;return i.getAttribute("points").replace(t,o),s.currentPath.autoClose=!1,s}function W(i){const o=y(i.getAttribute("cx")||0),t=y(i.getAttribute("cy")||0),s=y(i.getAttribute("r")||0),a=new at;a.absarc(o,t,s,0,Math.PI*2);const f=new ot;return f.subPaths.push(a),f}function q(i){const o=y(i.getAttribute("cx")||0),t=y(i.getAttribute("cy")||0),s=y(i.getAttribute("rx")||0),a=y(i.getAttribute("ry")||0),f=new at;f.absellipse(o,t,s,a,0,Math.PI*2);const r=new ot;return r.subPaths.push(f),r}function rt(i){const o=y(i.getAttribute("x1")||0),t=y(i.getAttribute("y1")||0),s=y(i.getAttribute("x2")||0),a=y(i.getAttribute("y2")||0),f=new ot;return f.moveTo(o,t),f.lineTo(s,a),f.currentPath.autoClose=!1,f}function R(i,o){o=Object.assign({},o);let t={};if(i.hasAttribute("class")){const r=i.getAttribute("class").split(/\s/).filter(Boolean).map(b=>b.trim());for(let b=0;b<r.length;b++)t=Object.assign(t,Y["."+r[b]])}i.hasAttribute("id")&&(t=Object.assign(t,Y["#"+i.getAttribute("id")]));function s(r,b,x){x===void 0&&(x=function(h){return h.startsWith("url")&&console.warn("SVGLoader: url access in attributes is not implemented."),h}),i.hasAttribute(r)&&(o[b]=x(i.getAttribute(r))),t[r]&&(o[b]=x(t[r])),i.style&&i.style[r]!==""&&(o[b]=x(i.style[r]))}function a(r){return Math.max(0,Math.min(1,y(r)))}function f(r){return Math.max(0,y(r))}return s("fill","fill"),s("fill-opacity","fillOpacity",a),s("fill-rule","fillRule"),s("opacity","opacity",a),s("stroke","stroke"),s("stroke-opacity","strokeOpacity",a),s("stroke-width","strokeWidth",f),s("stroke-linejoin","strokeLineJoin"),s("stroke-linecap","strokeLineCap"),s("stroke-miterlimit","strokeMiterLimit",f),s("visibility","visibility"),o}function d(i,o){return i-(o-i)}function u(i,o,t){if(typeof i!="string")throw new TypeError("Invalid input: "+typeof i);const s={SEPARATOR:/[ \t\r\n\,.\-+]/,WHITESPACE:/[ \t\r\n]/,DIGIT:/[\d]/,SIGN:/[-+]/,POINT:/\./,COMMA:/,/,EXP:/e/i,FLAGS:/[01]/},a=0,f=1,r=2,b=3;let x=a,h=!0,v="",V="";const M=[];function n(E,nt,F){const $=new SyntaxError('Unexpected character "'+E+'" at index '+nt+".");throw $.partial=F,$}function e(){v!==""&&(V===""?M.push(Number(v)):M.push(Number(v)*Math.pow(10,Number(V)))),v="",V=""}let c;const P=i.length;for(let E=0;E<P;E++){if(c=i[E],Array.isArray(o)&&o.includes(M.length%t)&&s.FLAGS.test(c)){x=f,v=c,e();continue}if(x===a){if(s.WHITESPACE.test(c))continue;if(s.DIGIT.test(c)||s.SIGN.test(c)){x=f,v=c;continue}if(s.POINT.test(c)){x=r,v=c;continue}s.COMMA.test(c)&&(h&&n(c,E,M),h=!0)}if(x===f){if(s.DIGIT.test(c)){v+=c;continue}if(s.POINT.test(c)){v+=c,x=r;continue}if(s.EXP.test(c)){x=b;continue}s.SIGN.test(c)&&v.length===1&&s.SIGN.test(v[0])&&n(c,E,M)}if(x===r){if(s.DIGIT.test(c)){v+=c;continue}if(s.EXP.test(c)){x=b;continue}s.POINT.test(c)&&v[v.length-1]==="."&&n(c,E,M)}if(x===b){if(s.DIGIT.test(c)){V+=c;continue}if(s.SIGN.test(c)){if(V===""){V+=c;continue}V.length===1&&s.SIGN.test(V)&&n(c,E,M)}}s.WHITESPACE.test(c)?(e(),x=a,h=!1):s.COMMA.test(c)?(e(),x=a,h=!0):s.SIGN.test(c)?(e(),x=f,v=c):s.POINT.test(c)?(e(),x=r,v=c):n(c,E,M)}return e(),M}const m=["mm","cm","in","pt","pc","px"],I={mm:{mm:1,cm:.1,in:1/25.4,pt:72/25.4,pc:6/25.4,px:-1},cm:{mm:10,cm:1,in:1/2.54,pt:72/2.54,pc:6/2.54,px:-1},in:{mm:25.4,cm:2.54,in:1,pt:72,pc:6,px:-1},pt:{mm:25.4/72,cm:2.54/72,in:1/72,pt:1,pc:6/72,px:-1},pc:{mm:25.4/6,cm:2.54/6,in:1/6,pt:72/6,pc:1,px:-1},px:{px:1}};function y(i){let o="px";if(typeof i=="string"||i instanceof String)for(let s=0,a=m.length;s<a;s++){const f=m[s];if(i.endsWith(f)){o=f,i=i.substring(0,i.length-f.length);break}}let t;return o==="px"&&N.defaultUnit!=="px"?t=I.in[N.defaultUnit]/N.defaultDPI:(t=I[o][N.defaultUnit],t<0&&(t=I[o].in*N.defaultDPI)),t*parseFloat(i)}function g(i){if(!(i.hasAttribute("transform")||i.nodeName==="use"&&(i.hasAttribute("x")||i.hasAttribute("y"))))return null;const o=A(i);return p.length>0&&o.premultiply(p[p.length-1]),j.copy(o),p.push(o),o}function A(i){const o=new it,t=J;if(i.nodeName==="use"&&(i.hasAttribute("x")||i.hasAttribute("y"))){const s=y(i.getAttribute("x")),a=y(i.getAttribute("y"));o.translate(s,a)}if(i.hasAttribute("transform")){const s=i.getAttribute("transform").split(")");for(let a=s.length-1;a>=0;a--){const f=s[a].trim();if(f==="")continue;const r=f.indexOf("("),b=f.length;if(r>0&&r<b){const x=f.slice(0,r),h=u(f.slice(r+1));switch(t.identity(),x){case"translate":if(h.length>=1){const v=h[0];let V=v;h.length>=2&&(V=h[1]),t.translate(v,V)}break;case"rotate":if(h.length>=1){let v=0,V=0,M=0;v=-h[0]*Math.PI/180,h.length>=3&&(V=h[1],M=h[2]),H.identity().translate(-V,-M),tt.identity().rotate(v),_.multiplyMatrices(tt,H),H.identity().translate(V,M),t.multiplyMatrices(H,_)}break;case"scale":if(h.length>=1){const v=h[0];let V=v;h.length>=2&&(V=h[1]),t.scale(v,V)}break;case"skewX":h.length===1&&t.set(1,Math.tan(h[0]*Math.PI/180),0,0,1,0,0,0,1);break;case"skewY":h.length===1&&t.set(1,0,0,Math.tan(h[0]*Math.PI/180),1,0,0,0,1);break;case"matrix":h.length===6&&t.set(h[0],h[2],h[4],h[1],h[3],h[5],0,0,1);break}}o.premultiply(t)}}return o}function S(i,o){function t(f){l.set(f.x,f.y,1).applyMatrix3(o),f.set(l.x,l.y)}const s=G(o),a=i.subPaths;for(let f=0,r=a.length;f<r;f++){const b=a[f].curves;for(let x=0;x<b.length;x++){const h=b[x];h.isLineCurve?(t(h.v1),t(h.v2)):h.isCubicBezierCurve?(t(h.v0),t(h.v1),t(h.v2),t(h.v3)):h.isQuadraticBezierCurve?(t(h.v0),t(h.v1),t(h.v2)):h.isEllipseCurve&&(s&&console.warn("SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented."),T.set(h.aX,h.aY),t(T),h.aX=T.x,h.aY=T.y,h.xRadius*=C(o),h.yRadius*=O(o))}}}function G(i){return i.elements[1]!==0||i.elements[3]!==0}function C(i){const o=i.elements;return Math.sqrt(o[0]*o[0]+o[1]*o[1])}function O(i){const o=i.elements;return Math.sqrt(o[3]*o[3]+o[4]*o[4])}const D=[],Y={},p=[],J=new it,H=new it,tt=new it,_=new it,T=new B,l=new wt,j=new it,U=new DOMParser().parseFromString(L,"image/svg+xml");return k(U.documentElement,{fill:"#000",fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeLineJoin:"miter",strokeLineCap:"butt",strokeMiterLimit:4}),{paths:D,xml:U.documentElement}}static createShapes(L){const N={ORIGIN:0,DESTINATION:1,BETWEEN:2,LEFT:3,RIGHT:4,BEHIND:5,BEYOND:6},k={loc:N.ORIGIN,t:0};function z(d,u,m,I){const y=d.x,g=u.x,A=m.x,S=I.x,G=d.y,C=u.y,O=m.y,D=I.y,Y=(S-A)*(G-O)-(D-O)*(y-A),p=(g-y)*(G-O)-(C-G)*(y-A),J=(D-O)*(g-y)-(S-A)*(C-G),H=Y/J,tt=p/J;if(J===0&&Y!==0||H<=0||H>=1||tt<0||tt>1)return null;if(Y===0&&J===0){for(let _=0;_<2;_++)if(w(_===0?m:I,d,u),k.loc==N.ORIGIN){const T=_===0?m:I;return{x:T.x,y:T.y,t:k.t}}else if(k.loc==N.BETWEEN){const T=+(y+k.t*(g-y)).toPrecision(10),l=+(G+k.t*(C-G)).toPrecision(10);return{x:T,y:l,t:k.t}}return null}else{for(let l=0;l<2;l++)if(w(l===0?m:I,d,u),k.loc==N.ORIGIN){const j=l===0?m:I;return{x:j.x,y:j.y,t:k.t}}const _=+(y+H*(g-y)).toPrecision(10),T=+(G+H*(C-G)).toPrecision(10);return{x:_,y:T,t:H}}}function w(d,u,m){const I=m.x-u.x,y=m.y-u.y,g=d.x-u.x,A=d.y-u.y,S=I*A-g*y;if(d.x===u.x&&d.y===u.y){k.loc=N.ORIGIN,k.t=0;return}if(d.x===m.x&&d.y===m.y){k.loc=N.DESTINATION,k.t=1;return}if(S<-Number.EPSILON){k.loc=N.LEFT;return}if(S>Number.EPSILON){k.loc=N.RIGHT;return}if(I*g<0||y*A<0){k.loc=N.BEHIND;return}if(Math.sqrt(I*I+y*y)<Math.sqrt(g*g+A*A)){k.loc=N.BEYOND;return}let G;I!==0?G=g/I:G=A/y,k.loc=N.BETWEEN,k.t=G}function Q(d,u){const m=[],I=[];for(let y=1;y<d.length;y++){const g=d[y-1],A=d[y];for(let S=1;S<u.length;S++){const G=u[S-1],C=u[S],O=z(g,A,G,C);O!==null&&m.find(D=>D.t<=O.t+Number.EPSILON&&D.t>=O.t-Number.EPSILON)===void 0&&(m.push(O),I.push(new B(O.x,O.y)))}}return I}function et(d,u,m){const I=new B;u.getCenter(I);const y=[];return m.forEach(g=>{g.boundingBox.containsPoint(I)&&Q(d,g.points).forEach(A=>{y.push({identifier:g.identifier,isCW:g.isCW,point:A})})}),y.sort((g,A)=>g.point.x-A.point.x),y}function Z(d,u,m,I,y){(y==null||y==="")&&(y="nonzero");const g=new B;d.boundingBox.getCenter(g);const A=[new B(m,g.y),new B(I,g.y)],S=et(A,d.boundingBox,u);S.sort((p,J)=>p.point.x-J.point.x);const G=[],C=[];S.forEach(p=>{p.identifier===d.identifier?G.push(p):C.push(p)});const O=G[0].point.x,D=[];let Y=0;for(;Y<C.length&&C[Y].point.x<O;)D.length>0&&D[D.length-1]===C[Y].identifier?D.pop():D.push(C[Y].identifier),Y++;if(D.push(d.identifier),y==="evenodd"){const p=D.length%2===0,J=D[D.length-2];return{identifier:d.identifier,isHole:p,for:J}}else if(y==="nonzero"){let p=!0,J=null,H=null;for(let tt=0;tt<D.length;tt++){const _=D[tt];p?(H=u[_].isCW,p=!1,J=_):H!==u[_].isCW&&(H=u[_].isCW,p=!0)}return{identifier:d.identifier,isHole:p,for:J}}else console.warn('fill-rule: "'+y+'" is currently not implemented.')}let X=0,K=999999999,W=-999999999,q=L.subPaths.map(d=>{const u=d.getPoints();let m=-999999999,I=999999999,y=-999999999,g=999999999;for(let A=0;A<u.length;A++){const S=u[A];S.y>m&&(m=S.y),S.y<I&&(I=S.y),S.x>y&&(y=S.x),S.x<g&&(g=S.x)}return W<=y&&(W=y+1),K>=g&&(K=g-1),{curves:d.curves,points:u,isCW:At.isClockWise(u),identifier:X++,boundingBox:new Tt(new B(g,I),new B(y,m))}});q=q.filter(d=>d.points.length>1);const rt=q.map(d=>{var u;return Z(d,q,K,W,(u=L.userData)==null?void 0:u.style.fillRule)}),R=[];return q.forEach(d=>{if(!rt[d.identifier].isHole){const u=new kt;u.curves=d.curves,rt.filter(m=>m.isHole&&m.for===d.identifier).forEach(m=>{const I=q[m.identifier],y=new at;y.curves=I.curves,u.holes.push(y)}),R.push(u)}}),R}static getStrokeStyle(L,N,k,z,w){return L=L!==void 0?L:1,N=N!==void 0?N:"#000",k=k!==void 0?k:"miter",z=z!==void 0?z:"butt",w=w!==void 0?w:4,{strokeColor:N,strokeWidth:L,strokeLineJoin:k,strokeLineCap:z,strokeMiterLimit:w}}static pointsToStroke(L,N,k,z){const w=[],Q=[],et=[];if(ut.pointsToStrokeWithBuffers(L,N,k,z,w,Q,et)===0)return null;const Z=new vt;return Z.setAttribute("position",new lt(w,3)),Z.setAttribute("normal",new lt(Q,3)),Z.setAttribute("uv",new lt(et,2)),Z}static pointsToStrokeWithBuffers(L,N,k,z,w,Q,et,Z){const X=new B,K=new B,W=new B,q=new B,rt=new B,R=new B,d=new B,u=new B,m=new B,I=new B,y=new B,g=new B,A=new B,S=new B,G=new B,C=new B,O=new B;k=k!==void 0?k:12,z=z!==void 0?z:.001,Z=Z!==void 0?Z:0,L=M(L);const D=L.length;if(D<2)return 0;const Y=L[0].equals(L[D-1]);let p,J=L[0],H;const tt=N.strokeWidth/2,_=1/(D-1);let T=0,l,j,U,i,o=!1,t=0,s=Z*3,a=Z*2;f(L[0],L[1],X).multiplyScalar(tt),u.copy(L[0]).sub(X),m.copy(L[0]).add(X),I.copy(u),y.copy(m);for(let n=1;n<D;n++){p=L[n],n===D-1?Y?H=L[1]:H=void 0:H=L[n+1];const e=X;if(f(J,p,e),W.copy(e).multiplyScalar(tt),g.copy(p).sub(W),A.copy(p).add(W),l=T+_,j=!1,H!==void 0){f(p,H,K),W.copy(K).multiplyScalar(tt),S.copy(p).sub(W),G.copy(p).add(W),U=!0,W.subVectors(H,J),e.dot(W)<0&&(U=!1),n===1&&(o=U),W.subVectors(H,p),W.normalize();const c=Math.abs(e.dot(W));if(c>Number.EPSILON){const P=tt/c;W.multiplyScalar(-P),q.subVectors(p,J),rt.copy(q).setLength(P).add(W),C.copy(rt).negate();const E=rt.length(),nt=q.length();q.divideScalar(nt),R.subVectors(H,p);const F=R.length();switch(R.divideScalar(F),q.dot(C)<nt&&R.dot(C)<F&&(j=!0),O.copy(rt).add(p),C.add(p),i=!1,j?U?(G.copy(C),A.copy(C)):(S.copy(C),g.copy(C)):x(),N.strokeLineJoin){case"bevel":h(U,j,l);break;case"round":v(U,j),U?b(p,g,S,l,0):b(p,G,A,l,1);break;case"miter":case"miter-clip":default:const $=tt*N.strokeMiterLimit/E;if($<1)if(N.strokeLineJoin!=="miter-clip"){h(U,j,l);break}else v(U,j),U?(R.subVectors(O,g).multiplyScalar($).add(g),d.subVectors(O,S).multiplyScalar($).add(S),r(g,l,0),r(R,l,0),r(p,l,.5),r(p,l,.5),r(R,l,0),r(d,l,0),r(p,l,.5),r(d,l,0),r(S,l,0)):(R.subVectors(O,A).multiplyScalar($).add(A),d.subVectors(O,G).multiplyScalar($).add(G),r(A,l,1),r(R,l,1),r(p,l,.5),r(p,l,.5),r(R,l,1),r(d,l,1),r(p,l,.5),r(d,l,1),r(G,l,1));else j?(U?(r(m,T,1),r(u,T,0),r(O,l,0),r(m,T,1),r(O,l,0),r(C,l,1)):(r(m,T,1),r(u,T,0),r(O,l,1),r(u,T,0),r(C,l,0),r(O,l,1)),U?S.copy(O):G.copy(O)):U?(r(g,l,0),r(O,l,0),r(p,l,.5),r(p,l,.5),r(O,l,0),r(S,l,0)):(r(A,l,1),r(O,l,1),r(p,l,.5),r(p,l,.5),r(O,l,1),r(G,l,1)),i=!0;break}}else x()}else x();!Y&&n===D-1&&V(L[0],I,y,U,!0,T),T=l,J=p,u.copy(S),m.copy(G)}if(!Y)V(p,g,A,U,!1,l);else if(j&&w){let n=O,e=C;o!==U&&(n=C,e=O),U?(i||o)&&(e.toArray(w,0*3),e.toArray(w,3*3),i&&n.toArray(w,1*3)):(i||!o)&&(e.toArray(w,1*3),e.toArray(w,3*3),i&&n.toArray(w,0*3))}return t;function f(n,e,c){return c.subVectors(e,n),c.set(-c.y,c.x).normalize()}function r(n,e,c){w&&(w[s]=n.x,w[s+1]=n.y,w[s+2]=0,Q&&(Q[s]=0,Q[s+1]=0,Q[s+2]=1),s+=3,et&&(et[a]=e,et[a+1]=c,a+=2)),t+=3}function b(n,e,c,P,E){X.copy(e).sub(n).normalize(),K.copy(c).sub(n).normalize();let nt=Math.PI;const F=X.dot(K);Math.abs(F)<1&&(nt=Math.abs(Math.acos(F))),nt/=k,W.copy(e);for(let $=0,st=k-1;$<st;$++)q.copy(W).rotateAround(n,nt),r(W,P,E),r(q,P,E),r(n,P,.5),W.copy(q);r(q,P,E),r(c,P,E),r(n,P,.5)}function x(){r(m,T,1),r(u,T,0),r(g,l,0),r(m,T,1),r(g,l,1),r(A,l,0)}function h(n,e,c){e?n?(r(m,T,1),r(u,T,0),r(g,l,0),r(m,T,1),r(g,l,0),r(C,l,1),r(g,c,0),r(S,c,0),r(C,c,.5)):(r(m,T,1),r(u,T,0),r(A,l,1),r(u,T,0),r(C,l,0),r(A,l,1),r(A,c,1),r(G,c,0),r(C,c,.5)):n?(r(g,c,0),r(S,c,0),r(p,c,.5)):(r(A,c,1),r(G,c,0),r(p,c,.5))}function v(n,e){e&&(n?(r(m,T,1),r(u,T,0),r(g,l,0),r(m,T,1),r(g,l,0),r(C,l,1),r(g,T,0),r(p,l,.5),r(C,l,1),r(p,l,.5),r(S,T,0),r(C,l,1)):(r(m,T,1),r(u,T,0),r(A,l,1),r(u,T,0),r(C,l,0),r(A,l,1),r(A,T,1),r(C,l,0),r(p,l,.5),r(p,l,.5),r(C,l,0),r(G,T,1)))}function V(n,e,c,P,E,nt){switch(N.strokeLineCap){case"round":E?b(n,c,e,nt,.5):b(n,e,c,nt,.5);break;case"square":if(E)X.subVectors(e,n),K.set(X.y,-X.x),W.addVectors(X,K).add(n),q.subVectors(K,X).add(n),P?(W.toArray(w,1*3),q.toArray(w,0*3),q.toArray(w,3*3)):(W.toArray(w,1*3),W.toArray(w,3*3),q.toArray(w,0*3));else{X.subVectors(c,n),K.set(X.y,-X.x),W.addVectors(X,K).add(n),q.subVectors(K,X).add(n);const F=w.length;P?(W.toArray(w,F-1*3),q.toArray(w,F-2*3),q.toArray(w,F-4*3)):(W.toArray(w,F-2*3),q.toArray(w,F-1*3),q.toArray(w,F-4*3))}break}}function M(n){let e=!1;for(let P=1,E=n.length-1;P<E;P++)if(n[P].distanceTo(n[P+1])<z){e=!0;break}if(!e)return n;const c=[];c.push(n[0]);for(let P=1,E=n.length-1;P<E;P++)n[P].distanceTo(n[P+1])>=z&&c.push(n[P]);return c.push(n[n.length-1]),c}}}const St=new Map,Ct=new ut,It=ct=>dt(St,ct,()=>new Promise((L,N)=>{Mt(),Ct.load(ct,k=>{ft(),L(Object.freeze(k))},Pt(ct),()=>{ft(),N()})}));export{It as default};
